@use "sass:color";
@use "css/palette";
@use "css/theme";

@import url(css/tokens.css);
@import url(css/baseline.css);

html {
  background-color: var(--md-sys-color-background);
  color: var(--md-sys-color-on-background);
  font-family: Lato, Roboto, "Helvetica Neue", "Arial Nova", "Nimbus Sans",
    Arial, sans-serif;
}

pre,
code {
  font-family: "Martian Mono", ui-monospace, "Cascadia Code", "Source Code Pro",
    Menlo, Consolas, "DejaVu Sans Mono", monospace;
}

@mixin with-channel($name, $color) {
  --#{$name}: #{$color};
  --#{$name}-channel: #{color.red($color) color.green($color) color.blue($color)};
}

:root {
  @each $name, $tones in palette.$reference {
    @each $tone, $color in $tones {
      @include with-channel(md-ref-palette-#{$name}#{$tone}, $color);
    }
  }
  @each $theme, $colors in palette.$system {
    @each $name, $color in $colors {
      @include with-channel(md-sys-color-#{$name}-#{$theme}, $color);
    }
  }
  @each $dp, $shadow in theme.$elevations {
    --elevation-#{$dp}: #{$shadow};
  }
}

@each $theme in (light, dark) {
  // prettier-ignore
  html[data-mui-color-scheme="#{$theme}"] {
    --md-sys-color-primary: var(--md-sys-color-primary-#{$theme});
    --md-sys-color-on-primary: var(--md-sys-color-on-primary-#{$theme});
    --md-sys-color-primary-container: var(--md-sys-color-primary-container-#{$theme});
    --md-sys-color-on-primary-container: var(--md-sys-color-on-primary-container-#{$theme});
    --md-sys-color-secondary: var(--md-sys-color-secondary-#{$theme});
    --md-sys-color-on-secondary: var(--md-sys-color-on-secondary-#{$theme});
    --md-sys-color-secondary-container: var(--md-sys-color-secondary-container-#{$theme});
    --md-sys-color-on-secondary-container: var(--md-sys-color-on-secondary-container-#{$theme});
    --md-sys-color-tertiary: var(--md-sys-color-tertiary-#{$theme});
    --md-sys-color-on-tertiary: var(--md-sys-color-on-tertiary-#{$theme});
    --md-sys-color-tertiary-container: var(--md-sys-color-tertiary-container-#{$theme});
    --md-sys-color-on-tertiary-container: var(--md-sys-color-on-tertiary-container-#{$theme});
    --md-sys-color-error: var(--md-sys-color-error-#{$theme});
    --md-sys-color-error-container: var(--md-sys-color-error-container-#{$theme});
    --md-sys-color-on-error: var(--md-sys-color-on-error-#{$theme});
    --md-sys-color-on-error-container: var(--md-sys-color-on-error-container-#{$theme});
    --md-sys-color-background: var(--md-sys-color-background-#{$theme});
    --md-sys-color-on-background: var(--md-sys-color-on-background-#{$theme});
    --md-sys-color-surface: var(--md-sys-color-surface-#{$theme});
    --md-sys-color-on-surface: var(--md-sys-color-on-surface-#{$theme});
    --md-sys-color-surface-variant: var(--md-sys-color-surface-variant-#{$theme});
    --md-sys-color-on-surface-variant: var(--md-sys-color-on-surface-variant-#{$theme});
    --md-sys-color-outline: var(--md-sys-color-outline-#{$theme});
    --md-sys-color-inverse-on-surface: var(--md-sys-color-inverse-on-surface-#{$theme});
    --md-sys-color-inverse-surface: var(--md-sys-color-inverse-surface-#{$theme});
    --md-sys-color-inverse-primary: var(--md-sys-color-inverse-primary-#{$theme});
    --md-sys-color-shadow: var(--md-sys-color-shadow-#{$theme});
    --md-sys-color-surface-tint: var(--md-sys-color-surface-tint-#{$theme});
    --md-sys-color-outline-variant: var(--md-sys-color-outline-variant-#{$theme});
    --md-sys-color-scrim: var(--md-sys-color-scrim-#{$theme});
    --md-sys-color-surface-container-low: var(--md-sys-color-surface-container-low-#{$theme});

    --md-sys-color-primary-channel: var(--md-sys-color-primary-#{$theme}-channel);
    --md-sys-color-on-primary-channel: var(--md-sys-color-on-primary-#{$theme}-channel);
    --md-sys-color-primary-container-channel: var(--md-sys-color-primary-container-#{$theme}-channel);
    --md-sys-color-on-primary-container-channel: var(--md-sys-color-on-primary-container-#{$theme}-channel);
    --md-sys-color-secondary-channel: var(--md-sys-color-secondary-#{$theme}-channel);
    --md-sys-color-on-secondary-channel: var(--md-sys-color-on-secondary-#{$theme}-channel);
    --md-sys-color-secondary-container-channel: var(--md-sys-color-secondary-container-#{$theme}-channel);
    --md-sys-color-on-secondary-container-channel: var(--md-sys-color-on-secondary-container-#{$theme}-channel);
    --md-sys-color-tertiary-channel: var(--md-sys-color-tertiary-#{$theme}-channel);
    --md-sys-color-on-tertiary-channel: var(--md-sys-color-on-tertiary-#{$theme}-channel);
    --md-sys-color-tertiary-container-channel: var(--md-sys-color-tertiary-container-#{$theme}-channel);
    --md-sys-color-on-tertiary-container-channel: var(--md-sys-color-on-tertiary-container-#{$theme}-channel);
    --md-sys-color-error-channel: var(--md-sys-color-error-#{$theme}-channel);
    --md-sys-color-error-container-channel: var(--md-sys-color-error-container-#{$theme}-channel);
    --md-sys-color-on-error-channel: var(--md-sys-color-on-error-#{$theme}-channel);
    --md-sys-color-on-error-container-channel: var(--md-sys-color-on-error-container-#{$theme}-channel);
    --md-sys-color-background-channel: var(--md-sys-color-background-#{$theme}-channel);
    --md-sys-color-on-background-channel: var(--md-sys-color-on-background-#{$theme}-channel);
    --md-sys-color-surface-channel: var(--md-sys-color-surface-#{$theme}-channel);
    --md-sys-color-on-surface-channel: var(--md-sys-color-on-surface-#{$theme}-channel);
    --md-sys-color-surface-variant-channel: var(--md-sys-color-surface-variant-#{$theme}-channel);
    --md-sys-color-on-surface-variant-channel: var(--md-sys-color-on-surface-variant-#{$theme}-channel);
    --md-sys-color-outline-channel: var(--md-sys-color-outline-#{$theme}-channel);
    --md-sys-color-inverse-on-surface-channel: var(--md-sys-color-inverse-on-surface-#{$theme}-channel);
    --md-sys-color-inverse-surface-channel: var(--md-sys-color-inverse-surface-#{$theme}-channel);
    --md-sys-color-inverse-primary-channel: var(--md-sys-color-inverse-primary-#{$theme}-channel);
    --md-sys-color-shadow-channel: var(--md-sys-color-shadow-#{$theme}-channel);
    --md-sys-color-surface-tint-channel: var(--md-sys-color-surface-tint-#{$theme}-channel);
    --md-sys-color-outline-variant-channel: var(--md-sys-color-outline-variant-#{$theme}-channel);
    --md-sys-color-scrim-channel: var(--md-sys-color-scrim-#{$theme}-channel);
    --md-sys-color-surface-container-low-channel: var(--md-sys-color-surface-container-low-#{$theme}-channel);
  }
}

@each $dp, $shadow in theme.$elevations {
  .elevation-#{$dp} {
    box-shadow: $shadow;
  }
}

@each $style in (display, headline, body, label, title) {
  @each $size in (small, medium, large) {
    .#{$style}-#{$size} {
      @include theme.typography($style, $size);
    }
  }
}
