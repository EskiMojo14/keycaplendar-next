@use "css/theme";

@mixin pressed() {
  &:has(:global(.MuiTouchRipple-rippleVisible)) {
    @content;
  }
}

:global(.MuiButtonBase-root).button {
  height: 40px;
  padding: 0 24px;
  border-radius: 20px;
  gap: 8px;
  .label {
    @include theme.typography(label, large);
  }
  .icon {
    font-size: 18px;
  }
  --transition-speed: 250ms;
  box-shadow: var(--elevation-0);
  transition: background-color theme.easing(standard-accelerate)
      var(--transition-speed),
    color theme.easing(standard-accelerate) var(--transition-speed),
    border-color theme.easing(standard-accelerate) var(--transition-speed),
    theme.elevation-transition();
  &:has(.icon) {
    padding-left: 16px;
  }
  .ripple::after {
    content: "";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: currentColor;
    opacity: 0;
    transition: opacity theme.easing(standard-accelerate)
      var(--transition-speed);
  }

  @include pressed {
    .ripple::after {
      opacity: var(--md-sys-state-pressed-state-layer-opacity);
    }
  }
  &:hover {
    .ripple::after {
      opacity: var(--md-sys-state-hover-state-layer-opacity);
    }
  }
  &:focus {
    .ripple::after {
      opacity: var(--md-sys-state-focus-state-layer-opacity);
    }
  }
  &.dragged {
    .ripple::after {
      opacity: var(--md-sys-state-dragged-state-layer-opacity);
    }
  }
  &:disabled {
    color: rgb(var(--md-sys-color-on-surface-channel) / 0.38);
  }
  &.text {
    color: var(--md-sys-color-primary);
  }
  &.outlined {
    border: 1px solid var(--md-sys-color-outline);
    color: var(--md-sys-color-primary);
    &:focus {
      border-color: var(--md-sys-color-primary);
    }
    &:disabled {
      border-color: rgb(var(--md-sys-color-primary-channel) / 0.12);
    }
    @include pressed() {
      border-color: var(--md-sys-color-outline);
    }
  }
  &.filled {
    background-color: var(--md-sys-color-primary);
    color: var(--md-sys-color-on-primary);
  }
  &.filled-tonal {
    background-color: var(--md-sys-color-secondary-container);
    color: var(--md-sys-color-on-secondary-container);
  }
  &.filled,
  &.filled-tonal {
    &:disabled {
      background-color: rgb(var(--md-sys-color-on-surface-channel) / 0.12);
      color: rgb(var(--md-sys-color-on-surface-channel) / 0.38);
    }
    &:hover {
      box-shadow: var(--elevation-1);
    }
    &.dragged {
      box-shadow: var(--elevation-3);
    }
  }
  &.elevated {
    box-shadow: var(--elevation-1);
    background-color: var(--md-sys-color-surface-container-low);
    color: var(--md-sys-color-primary);
    &:disabled {
      box-shadow: var(--elevation-0);
      background-color: rgb(var(--md-sys-color-on-surface-channel) / 0.12);
      color: rgb(var(--md-sys-color-on-surface-channel) / 0.38);
    }
    &:hover {
      box-shadow: var(--elevation-2);
    }
  }
}
