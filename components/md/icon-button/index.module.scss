@use "css/theme";

@mixin pressed() {
  &:has(:global(.MuiTouchRipple-rippleVisible)) {
    @content;
  }
}

.iconButton {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 8px;
  border-radius: 50%;

  --transition-speed: 150ms;
  &Container {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 4px;
    height: 48px;
    width: 48px;
  }
  .icon {
    font-size: 24px;
  }
  .ripple::after {
    content: "";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: currentColor;
    opacity: 0;
    transition: opacity theme.easing(standard-accelerate)
      var(--transition-speed);
  }

  @include pressed {
    .ripple::after {
      opacity: var(--md-sys-state-pressed-stateLayerOpacity);
    }
  }
  &:hover {
    .ripple::after {
      opacity: var(--md-sys-state-hover-stateLayerOpacity);
    }
  }
  &:focus {
    .ripple::after {
      opacity: var(--md-sys-state-focus-stateLayerOpacity);
    }
  }

  &.filled {
    color: var(--md-sys-color-onPrimary);
    background-color: var(--md-sys-color-primary);
    &.unselected {
      color: var(--md-sys-color-primary);
      background-color: var(--md-sys-color-containerHighest);
    }
    &.selected {
      color: var(--md-sys-color-on-primary);
      background-color: var(--md-sys-color-primary);
    }
    &:disabled,
    &.unselected:disabled,
    &.selected:disabled {
      background-color: rgb(var(--md-sys-color-onSurfaceChannel) / 0.12);
      color: rgb(var(--md-sys-color-onSurfaceChannel) / 0.38);
    }
  }

  &.filled-tonal {
    color: var(--md-sys-color-on-secondaryContainer);
    background-color: var(--md-sys-color-secondaryContainer);
    &.unselected {
      color: var(--md-sys-color-onSurfaceVariant);
      background-color: var(--md-sys-color-containerHighest);
    }
    &.selected {
      color: var(--md-sys-color-onSecondaryContainer);
      background-color: var(--md-sys-color-secondaryContainer);
    }
    &:disabled,
    &.unselected:disabled,
    &.selected:disabled {
      background-color: rgb(var(--md-sys-color-onSurfaceChannel) / 0.12);
      color: rgb(var(--md-sys-color-onSurfaceChannel) / 0.38);
    }
  }

  &.outlined {
    border: 1px solid var(--md-sys-color-outline);
    color: var(--md-sys-color-onSurfaceVariant);
    &.selected {
      background-color: var(--md-sys-color-inverseSurface);
      background-color: var(--md-sys-color-inverseOnSurface);
    }
    &:disabled {
      color: rgb(var(--md-sys-color-onSurfaceChannel) / 0.38);
      border-color: rgb(var(--md-sys-color-onSurfaceChannel) / 0.12);
      &.selected {
        background-color: rgb(var(--md-sys-color-onSurfaceChannel) / 0.12);
      }
    }
  }

  &.standard {
    color: var(--md-sys-color-onSurfaceVariant);
    &.selected {
      color: var(--md-sys-color-primary);
    }
    &:disabled,
    &.selected:disabled {
      color: rgb(var(--md-sys-color-onSurfaceChannel) / 0.38);
    }
  }
}
